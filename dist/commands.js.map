{"version":3,"file":"commands.js","mappings":";YACA,IAAIA,EAAsB,CAAC,kQCA3B,ijNCDAA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAGhB,CAFE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GDOxBC,OAAOC,SAAQ,WAGbC,MAAMC,IAAG,eATX,EASW,GATX,EASW,UAAC,WAAgBC,GAAO,uEAGI,OAF/BC,EAAWD,EAAQE,SAASC,SAASC,UAAU,yBAE1CC,KAAK,qBAAqB,SAE7BL,EAAQM,OAAM,OAEwB,OAD5CL,EAASM,kBAAkBC,KAAO,QAClCP,EAASM,kBAAkBE,MAAQ,SAAS,SAC/BT,EAAQM,OAAM,kFAjB/B,+KAkBG,mDATQ,GAUX,IA6CA,IAAMhB,EATmB,oBAAToB,KACVA,KACkB,oBAAXf,OACPA,YACkB,IAAXgB,EAAAA,EACPA,EAAAA,OACAC,EAMNtB,EAAEuB,OA1CF,SAAgBC,GAIdA,EAAMC,WACR,EAsCAzB,EAAE0B,MArCF,SAAeF,GAEfG,QAAQC,IAAI,qBACVJ,EAAMC,WACR,EAkCAzB,EAAE6B,kBAhCF,SAA2BL,GAEzBG,QAAQC,IAAI,iCACVJ,EAAMC,WACR,EA6BFzB,EAAE8B,qBA3BA,SAA+BN,GAE7BG,QAAQC,IAAI,oCACVJ,EAAMC,WACR,EAwBJzB,EAAE+B,qBAvBE,SAA+BP,GAE7BG,QAAQC,IAAI,oCACVJ,EAAMC,WACR","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/./src/commands/commands.js","webpack://excel-custom-functions-js/webpack/runtime/global"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n\n  Excel.run(async function (context) {\n    var myButton = context.workbook.commands.getByName(\"MaterialMasterUpdate\");\n  \n    myButton.load(\"controlProperties\");\n  \n    await context.sync();\n    myButton.controlProperties.size = \"large\";\n    myButton.controlProperties.align = \"center\";\n    return await context.sync();\n  });  \n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nfunction action(event) {\n  // Your code goes here\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\nfunction login(event) {\n// write login functiond=s here \nconsole.log(\"inside the login \");\n  event.completed();\n}\n\nfunction MaterialMasterGet(event) {\n  // write MaterialMasterGet function statements over here \n  console.log(\"inside the MaterialMasterGet \");\n    event.completed();\n  }\n\n  function MaterialMasterExport (event) {\n    // write MaterialMasterExport function statements over here \n    console.log(\"inside the MaterialMasterExport \");\n      event.completed();\n    }\n    function MaterialMasterUpdate (event) {\n      // write MaterialMasterExport function statements over here \n      console.log(\"inside the MaterialMasterExport \");\n        event.completed();\n      }\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal();\n\n// the add-in command functions need to be available in global scope\ng.action = action;\ng.login = login\ng.MaterialMasterGet = MaterialMasterGet\ng.MaterialMasterExport = MaterialMasterExport\ng.MaterialMasterUpdate = MaterialMasterUpdate\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","Office","onReady","Excel","run","context","myButton","workbook","commands","getByName","load","sync","controlProperties","size","align","self","global","undefined","action","event","completed","login","console","log","MaterialMasterGet","MaterialMasterExport","MaterialMasterUpdate"],"sourceRoot":""}